---
// Handle Nhost auth callbacks - this should match their default callback URL pattern
import { getLocale } from "astro-i18n-aut";
import { useTranslations } from "../../i18n/utils";
import type { Lang } from "../../i18n/ui";

const lang = getLocale(Astro.url);
const t = useTranslations(lang as Lang);

const url = new URL(Astro.request.url);
const token = url.searchParams.get("token");
const type = url.searchParams.get("type");

if (token && type === "emailConfirmation") {
  try {
    // Send the verification to Nhost
    const NHOST_SUBDOMAIN = process.env.NHOST_SUBDOMAIN;
    const NHOST_REGION = process.env.NHOST_REGION;
    const NHOST_AUTH_URL = `https://${NHOST_SUBDOMAIN}.auth.${NHOST_REGION}.nhost.run/v1`;

    const response = await fetch(`${NHOST_AUTH_URL}/user/email/confirm`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ token }),
    });

    const result = await response.json();

    if (response.ok && !result.error) {
      // Redirect to sign in page after successful verification
      return Astro.redirect(`/signin?message=${t("verifyEmail.successMessage")}`);
    } else {
      const error = result.error?.message || t("verifyEmail.failureMessage");
      return Astro.redirect(`/signin?error=${encodeURIComponent(error)}`);
    }
  } catch (err) {
    return Astro.redirect(`/signin?error=${t("verifyEmail.failureMessage")}`);
  }
}

// If no token, redirect to home
return Astro.redirect("/");
---