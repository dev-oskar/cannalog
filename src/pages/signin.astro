---
import { getLocale } from "astro-i18n-aut";
import { useTranslations } from "../i18n/utils";
import type { Lang } from "../i18n/ui";
import PublicLayout from "../layouts/PublicLayout.astro";
import Logo from "../components/ui/Logo.astro";


const lang = getLocale(Astro.url);
const t = useTranslations(lang as Lang);

const title = t("signin.title");

// Check for existing authentication
const accessToken = Astro.cookies.get("nhost-access-token")?.value;
const userCookie = Astro.cookies.get("nhost-user")?.value;

// Redirect if already signed in
if (accessToken && userCookie) {
  return Astro.redirect("/dashboard");
}



// Handle messages from URL params and form submission
const url = new URL(Astro.request.url);
const message = url.searchParams.get("message");
const errorParam = url.searchParams.get("error");

let error = errorParam || "";
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    if (!email || !password) {
      error = t("signin.errors.fillFields");
    }
  } catch (e) {
    error = t("signin.errors.authFailed");
  }
}

if (errorParam) {
  // Handle specific error codes with proper i18n
  switch (errorParam) {
    case "auth-required":
      error = t("signin.errors.authRequired");
      break;
    default:
      error = t("signin.errors.checkCredentials");
      break;
  }
}
---

<PublicLayout title={title}>
  <section>
    <div
      class="flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0"
    >
      <a
        href="#"
        class="flex items-center mb-6 text-2xl font-semibold text-gray-900 dark:text-white"
      >
        <Logo />
      </a>
      <div
        class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700"
      >
        <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
          <h1
            class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white"
          >
            {t("signin.heading")}
          </h1>
          {error && (
            <div class="p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400" role="alert">
              {error}
            </div>
          )}
          
          {message && (
            <div class="p-4 mb-4 text-sm text-green-800 rounded-lg bg-green-50 dark:bg-gray-800 dark:text-green-400" role="alert">
              {message}
            </div>
          )}
          <form class="space-y-4 md:space-y-6" action="/api/signin" method="post" id="signin-form">
            <div>
              <label
                for="email"
                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                >{t("signin.emailLabel")}</label
              >
              <input
                type="email"
                name="email"
                id="email"
                class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder={t("signin.emailPlaceholder")}
                required=""
              />
            </div>
            <div>
              <label
                for="password"
                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                >{t("signin.passwordLabel")}</label
              >
              <input
                type="password"
                name="password"
                id="password"
                placeholder={t("signin.passwordPlaceholder")}
                class="bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                required=""
              />
            </div>
            <div class="flex items-center justify-between">
              <div class="flex items-start">
                <div class="flex items-center h-5">
                  <input
                    id="remember"
                    aria-describedby="remember"
                    type="checkbox"
                    class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                    required=""
                  />
                </div>
                <div class="ml-3 text-sm">
                  <label for="remember" class="text-gray-500 dark:text-gray-300"
                    >{t("signin.rememberMe")}</label
                  >
                </div>
              </div>
              <a
                href="#"
                class="text-sm font-medium text-primary-600 hover:underline dark:text-primary-500"
                >{t("signin.forgotPassword")}</a
              >
            </div>
            <button
              type="submit"
              class="w-full text-white bg-primary-600 hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
              >{t("signin.signInButton")}</button
            >
            <p class="text-sm font-light text-gray-500 dark:text-gray-400">
              {t("signin.noAccount")} <a
                href="/register"
                class="font-medium text-primary-600 hover:underline dark:text-primary-500"
                >{t("signin.signUp")}</a
              >
            </p>
          </form>
        </div>
      </div>
    </div>
  </section>
</PublicLayout>
