---
import { getLocale } from "astro-i18n-aut";
import { useTranslations } from "../i18n/utils";
import type { Lang } from "../i18n/ui";
import LanguagePicker from "./ui/LanguagePicker.astro";

const lang = getLocale(Astro.url);
const t = useTranslations(lang as Lang);

// Define the shape for user information
export interface User {
  name: string;
  email: string;
  avatarUrl: string;
}

// Define the shape for a simple navigation link
export interface NavLink {
  href: string;
  label: string;
  svgPath: string[];
  badge?: string;
}

// Define the shape for a dropdown menu item
export interface NavDropdown {
  id: string; // Unique ID for collapse functionality
  label: string;
  svgPath: string[];
  subLinks: NavLink[];
}

// A union type to allow either a link or a dropdown in the same array
export type NavItem = NavLink | NavDropdown;

export interface Props {
  user?: User;
  mainNavItems?: NavItem[];
  footerNavLinks?: NavLink[];
}

// Helper to check if an item is a dropdown
function isDropdown(item: NavItem): item is NavDropdown {
  return "subLinks" in item;
}

// Set default values for the props, mimicking the new Flowbite structure
const {
  user = {
    name: "Neil Sims",
    email: "neil.sims@flowbite.com",
    avatarUrl: "https://flowbite.com/docs/images/people/profile-picture-5.jpg",
  },
  mainNavItems = [
    {
      href: "/dashboard",
      label: t("sidebar.nav.overview"),
      svgPath: [
        "M2 10a8 8 0 018-8v8h8a8 8 0 11-16 0z",
        "M12 2.252A8.014 8.014 0 0117.748 8H12V2.252z",
      ],
    },
    {
      id: "dropdown-features",
      label: t("sidebar.nav.features"),
      svgPath: [
        "M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z",
      ],
      subLinks: [
        { href: "#", label: t("sidebar.nav.strains"), svgPath: [] },
        { href: "#", label: t("sidebar.nav.sessions"), svgPath: [] },
        { href: "#", label: t("sidebar.nav.journal"), svgPath: [] },
        { href: "#", label: t("sidebar.nav.analytics"), svgPath: [] },
      ],
    },
  ],
  footerNavLinks = [
    {
      href: "#",
      label: t("sidebar.nav.docs"),
      svgPath: [
        "M9 2a1 1 0 000 2h2a1 1 0 100-2H9z",
        "M4 5a2 2 0 012-2 3 3 0 003 3h2a3 3 0 003-3 2 2 0 012 2v11a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 000 2h.01a1 1 0 100-2H7zm3 0a1 1 0 000 2h3a1 1 0 100-2h-3zm-3 4a1 1 0 100 2h.01a1 1 0 100-2H7zm3 0a1 1 0 100 2h3a1 1 0 100-2h-3z",
      ],
    },
    {
      href: "#",
      label: t("sidebar.nav.help"),
      svgPath: [
        "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-2 0c0 .993-.241 1.929-.668 2.754l-1.524-1.525a3.997 3.997 0 00.078-2.183l1.562-1.562C15.802 8.249 16 9.1 16 10zm-5.165 3.913l1.58 1.58A5.98 5.98 0 0110 16a5.976 5.976 0 01-2.516-.552l1.562-1.562a4.006 4.006 0 001.789.027zm-4.677-2.796a4.002 4.002 0 01-.041-2.08l-.08.080-1.53-1.533A5.98 5.98 0 004 10c0 .954.223 1.856.619 2.657l1.54-1.54zm1.088-6.45A5.974 5.974 0 0110 4c.954 0 1.856.223 2.657.619l-1.54 1.54a4.002 4.002 0 00-2.346.033L7.246 4.668zM12 10a2 2 0 11-4 0 2 2 0 014 0z",
      ],
    },
  ],
} = Astro.props;
---

<aside
  id="logo-sidebar"
  class="fixed top-0 left-0 z-50 w-64 h-screen transition-transform -translate-x-full bg-card-bg-color border-r border-tertiary/20 sm:translate-x-0"
  aria-label="Sidebar"
>
  <div class="h-full px-3 pb-4 overflow-y-auto bg-card-bg-color flex flex-col">
    <div>
      <div class="flex flex-col items-center py-4">
        <img
          class="w-16 h-16 mb-2 rounded-full shadow-md"
          src={user.avatarUrl}
          alt=`${user.name} avatar`
        />
        <h5 class="mb-1 text-lg font-semibold text-text-color truncate w-full text-center">{user.name}</h5>
        <span class="text-xs text-text-color/60 truncate w-full text-center mb-3">{user.email}</span>
        <form action="/api/signout" method="post" class="w-full">
          <button
            type="submit"
            class="inline-flex items-center justify-center w-full px-3 py-2 text-sm font-medium text-center text-text-color border border-tertiary/20 rounded-md hover:bg-secondary/10 focus:ring-2 focus:outline-none focus:ring-primary/50 transition-colors duration-200"
          >
          <svg
            class="w-4 h-4 me-2"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 18 16"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 8h11m0 0L8 4m4 4-4 4m4-11h3a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-3"
            ></path>
          </svg>
          {t("sidebar.logout")}
          </button>
        </form>
      </div>      <ul class="space-y-2 font-medium border-t border-tertiary/20 pt-4 mt-4">
        {
          mainNavItems.map((item) => (
            <li>
              {isDropdown(item) ? (
                <>
                  <button
                    type="button"
                    class="flex items-center w-full p-2 text-base text-text-color rounded-lg group hover:bg-secondary/10 transition duration-75"
                    aria-controls={item.id}
                    data-collapse-toggle={item.id}
                  >
                    <svg
                      class="flex-shrink-0 w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color"
                      aria-hidden="true"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      {item.svgPath.map((path) => (
                        <path
                          fill-rule="evenodd"
                          d={path}
                          clip-rule="evenodd"
                        />
                      ))}
                    </svg>
                    <span class="flex-1 ms-3 text-left whitespace-nowrap">
                      {item.label}
                    </span>
                    <svg
                      class="w-6 h-6"
                      aria-hidden="true"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
                        clip-rule="evenodd"
                      />
                    </svg>
                  </button>
                  <ul id={item.id} class="hidden py-2 space-y-2">
                    {item.subLinks.map((subLink) => (
                      <li>
                        <a
                          href={subLink.href}
                          class="flex items-center w-full p-2 text-text-color rounded-lg pl-11 group hover:bg-secondary/10"
                        >
                          {subLink.label}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  href={item.href}
                  class="flex items-center p-2 text-text-color rounded-lg hover:bg-secondary/10 group"
                >
                  <svg
                    class="w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color"
                    aria-hidden="true"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    {item.svgPath.map((path) => (
                      <path d={path} />
                    ))}
                  </svg>
                  <span class="flex-1 ms-3 whitespace-nowrap">
                    {item.label}
                  </span>
                  {item.badge && (
                    <span class="inline-flex items-center justify-center px-2 ms-3 text-sm font-medium text-primary bg-primary-600/20 rounded-full">
                      {item.badge}
                    </span>
                  )}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </div>
    <ul class="pt-4 mt-auto space-y-2 font-medium border-t border-tertiary/20">
      {
        footerNavLinks.map((link) => (
          <li>
            <a
              href={link.href}
              class="flex items-center p-2 text-text-color rounded-lg hover:bg-secondary/10 group"
            >
              <svg
                class="flex-shrink-0 w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color"
                aria-hidden="true"
                fill="currentColor"
                viewBox="0 0 20 20"
                xmlns="http://www.w3.org/2000/svg"
              >
                {link.svgPath.map((path) => (
                  <path fill-rule="evenodd" d={path} clip-rule="evenodd" />
                ))}
              </svg>
              <span class="ms-3">{link.label}</span>
            </a>
          </li>
        ))
      }
      
      <!-- Settings Section -->
      <li class="border-t border-tertiary/20 pt-2">
        <a
          href="#"
          class="flex items-center p-2 text-text-color rounded-lg hover:bg-secondary/10 group"
        >
          <svg
            class="flex-shrink-0 w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color"
            aria-hidden="true"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path 
              fill-rule="evenodd" 
              d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z" 
              clip-rule="evenodd" 
            />
          </svg>
          <span class="ms-3">{t("sidebar.nav.settings")}</span>
        </a>
      </li>
      
      <!-- Theme Switcher Section -->
      <li>
        <button
          id="sidebar-theme-toggle"
          type="button"
          class="flex items-center w-full p-2 text-text-color rounded-lg hover:bg-secondary/10 group transition-colors duration-200"
        >
          <svg
            id="sidebar-theme-toggle-dark-icon"
            class="flex-shrink-0 w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color hidden"
            aria-hidden="true"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z" />
          </svg>
          <svg
            id="sidebar-theme-toggle-light-icon"
            class="flex-shrink-0 w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color hidden"
            aria-hidden="true"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
              fill-rule="evenodd"
              clip-rule="evenodd"
            />
          </svg>
          <span class="ms-3">{t("navbar.toggleTheme")}</span>
        </button>
      </li>
      
      <!-- Language Picker Section -->
      <li>
        <button
          type="button"
          class="flex items-center w-full p-2 text-text-color rounded-lg hover:bg-secondary/10 group"
          data-collapse-toggle="language-dropdown"
          aria-controls="language-dropdown"
        >
          <svg
            class="flex-shrink-0 w-6 h-6 text-text-color/70 transition duration-75 group-hover:text-text-color"
            aria-hidden="true"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path 
              fill-rule="evenodd" 
              d="M7 2a1 1 0 011 1v1h3a1 1 0 110 2H9.578a18.87 18.87 0 01-1.724 4.78c.29.354.596.696.914 1.026a1 1 0 11-1.44 1.389c-.188-.196-.373-.396-.554-.6a19.098 19.098 0 01-3.107 3.567 1 1 0 01-1.334-1.49 17.087 17.087 0 003.13-3.733 18.992 18.992 0 01-1.487-2.494 1 1 0 111.79-.89c.234.47.489.928.764 1.372.417-.934.752-1.913.997-2.927H3a1 1 0 110-2h3V3a1 1 0 011-1zm6 6a1 1 0 01.894.553l2.991 5.982a.869.869 0 01.02.037l.99 1.98a1 1 0 11-1.79.895L15.383 16h-4.764l-.724 1.447a1 1 0 11-1.788-.894l.99-1.98.019-.038 2.99-5.982A1 1 0 0113 8zm-1.382 6h2.764L13 11.236 11.618 14z" 
              clip-rule="evenodd" 
            />
          </svg>
          <span class="flex-1 ms-3 text-left">{t("sidebar.nav.language")}</span>
          <svg
            class="w-6 h-6"
            aria-hidden="true"
            fill="currentColor"
            viewBox="0 0 20 20"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              fill-rule="evenodd"
              d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"
              clip-rule="evenodd"
            />
          </svg>
        </button>
        <div id="language-dropdown" class="hidden pl-8 py-2">
          <LanguagePicker />
        </div>
      </li>
    </ul>
  </div>
</aside>

<script>
  // Sidebar theme toggle functionality
  var sidebarThemeToggleDarkIcon = document.getElementById("sidebar-theme-toggle-dark-icon");
  var sidebarThemeToggleLightIcon = document.getElementById("sidebar-theme-toggle-light-icon");

  // Change the icons inside the button based on previous settings
  if (
    localStorage.getItem("color-theme") === "dark" ||
    (!("color-theme" in localStorage) &&
      window.matchMedia("(prefers-color-scheme: dark)").matches)
  ) {
    sidebarThemeToggleLightIcon?.classList.remove("hidden");
  } else {
    sidebarThemeToggleDarkIcon?.classList.remove("hidden");
  }

  var sidebarThemeToggleBtn = document.getElementById("sidebar-theme-toggle");

  sidebarThemeToggleBtn?.addEventListener("click", function () {
    // toggle icons inside button
    sidebarThemeToggleDarkIcon?.classList.toggle("hidden");
    sidebarThemeToggleLightIcon?.classList.toggle("hidden");

    // if set via local storage previously
    if (localStorage.getItem("color-theme")) {
      if (localStorage.getItem("color-theme") === "light") {
        document.documentElement.classList.add("dark");
        localStorage.setItem("color-theme", "dark");
      } else {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("color-theme", "light");
      }

      // if NOT set via local storage previously
    } else {
      if (document.documentElement.classList.contains("dark")) {
        document.documentElement.classList.remove("dark");
        localStorage.setItem("color-theme", "light");
      } else {
        document.documentElement.classList.add("dark");
        localStorage.setItem("color-theme", "dark");
      }
    }
  });
</script>
